name: Run DFX hourly

on:
  schedule:
    - cron: "0 * * * *"   # 매 정시(UTC) = KST +9
  workflow_dispatch:       # 수동 실행도 가능

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      # 1) 레포 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Chrome 설치 (Selenium용)
      - name: Setup Google Chrome
        uses: browser-actions/setup-chrome@v1
        id: chrome

      # 3) 오래된 chromedriver 삭제 (버전 충돌 방지)
      - name: Remove old chromedriver from PATH
        run: sudo rm -f /usr/bin/chromedriver

      # 4) Python 세팅
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 5) pip 캐시 (속도 향상)
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 6) Python 패키지 설치
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "selenium>=4.10" gspread oauth2client

      # 7) credentials.json 생성 (Secrets에서)
      - name: Write credentials.json from Secret
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS }}" > credentials.json

      # 8) 현재 파일 구조 확인 (디버그용)
      - name: List repository files
        run: ls -R

      # 9) DFX.py 실행
      - name: Run DFX.py
        env:
          CHROME_BIN: ${{ steps.chrome.outputs.chrome-path }}
          PATH: /usr/local/bin:/bin:/usr/sbin:/sbin  # /usr/bin 제거
        run: |
          which chromedriver || echo "✅ chromedriver 없음"
          python DFX.py
