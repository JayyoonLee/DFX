name: DFX.py per tenmin

on:
  schedule:
    - cron: "*/10 * * * *"  # 매 10분
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: dfx-log-main
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0  # 필요 시 히스토리 사용

      - name: Setup Google Chrome
        uses: browser-actions/setup-chrome@v1
        id: chrome

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # pip 캐시: requirements.txt 해시 기준
      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Write credentials.json safely
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
        run: |
          python - <<'PY'
          import os, json, pathlib
          raw = os.environ['GOOGLE_CREDENTIALS']
          json.loads(raw)  # sanity check
          pathlib.Path('credentials.json').write_text(raw, encoding='utf-8')
          print('credentials.json OK')
          PY

      - name: Make local chromedriver executable
        run: chmod +x ./chromedriver || true

      - name: Run all DFX_*.py (auto-discovered)
        id: run_dfx
        continue-on-error: true        # 일부 실패해도 다음 스크립트 계속
        env:
          CHROME_BIN: ${{ steps.chrome.outputs.chrome-path }}
          PATH: /usr/local/bin:/bin:/usr/sbin:/sbin
        run: |
          set -u
          SCRIPTS=$(ls -1 DFX_*.py 2>/dev/null | sort || true)
          if [ -z "$SCRIPTS" ]; then
            echo "No DFX_*.py found. Nothing to run."
            echo "result=Success" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          echo "Found scripts:"
          echo "$SCRIPTS"

          FAILS=()
          STATUS=0
          for script in $SCRIPTS; do
            echo "=== Running $script ==="
            if ! python "$script"; then
              echo "FAILED: $script"
              FAILS+=("$script")
              STATUS=1
            fi
          done

          if [ ${#FAILS[@]} -eq 0 ]; then
            echo "result=Success" >> "$GITHUB_OUTPUT"
          else
            joined=$(printf "%s, " "${FAILS[@]}")
            joined=${joined%, }
            echo "result=Fail: $joined" >> "$GITHUB_OUTPUT"
          fi

          exit $STATUS

      # 👇 레포에 커밋/파일 생성 없이, 콘솔 + Job Summary에만 결과 출력
      - name: Show run result (console & summary)
        if: always()
        run: |
          KST_TIME=$(TZ="Asia/Seoul" date "+%Y/%m/%d %H:%M")
          RESULT="${{ steps.run_dfx.outputs.result }}"
          LINE="$KST_TIME $RESULT"

          # 콘솔에 한 줄 출력 (예: 2025/08/13 10:30 Fail: DFX_08_Soobin.py)
          echo "$LINE"

          # 실패 목록을 보기 좋게 정리
          if echo "$RESULT" | grep -q '^Fail:'; then
            FAILS=$(echo "$RESULT" | sed 's/^Fail: //')
            echo ""
            echo "Failed scripts:"
            echo "$FAILS" | tr ',' '\n' | sed 's/^ *//'
          fi

          # Job Summary(상단 Results 탭)에도 표시
          {
            echo "### DFX run result"
            echo ""
            echo "\`$LINE\`"
            if echo "$RESULT" | grep -q '^Fail:'; then
              echo ""
              echo "**Failed scripts:**"
              echo ""
              echo "$FAILS" | tr ',' '\n' | sed 's/^ *//' | sed 's/^/- /'
            fi
          } >> "$GITHUB_STEP_SUMMARY"
